initial_board <- setup_board()
#add in all the moves
all_moves_df <- add_all_moves(pgn2, initial_board, move_cutoff = NULL)
library(tweenr)
library(animation)
library(ggplot2)
library(grid)
library(png)
#create the gif
filename <- "C:/Users/WS-Guest/Desktop/chess_gif"
create_chess_gif(all_moves_df, speed = 20, pause_end = TRUE, frames = 50, filename)
pgn2 <- "1.e4 d5 2.exd5 c6 3.dxc6 Bd7 4.cxb7 Be6 5.bxa8=Q Bf5 6.b4 a5 7.bxa5 Qb6 8.axb6 Kd7 9.b7 Nc6 10.b8=R h6 11.Qa7 h5 12. Qa3 h4"
#create the initial df
initial_board <- setup_board()
all_moves_df <- initial_board
#how many moves to process
if(is.null(move_cutoff)){
total_moves <- total_move_nos(pgn)
} else {
total_moves <- move_cutoff
}
for(move_number in 1:20){
#pgn lists moves as 1. W B 2. W B ... so need to find 'round' first
pgn_round <- ceiling(move_number/2)
#then find which colour is taking the move
move_colours <- c("B", "W")
move_colour <- move_colours[(move_number %% 2) + 1]
current_move <- get_move(pgn, move_colour, pgn_round)
#subset the last move
current_move_df <- all_moves_df[which(all_moves_df$move == (move_number - 1)),]
#set the cols
current_move_df$move <- move_number
current_move_df$player <- as.character(move_colour)
current_move_df$piece_position_before <- as.character(current_move_df$piece_position_after)
current_move_df$piece_position_after <- as.character(current_move_df$piece_position_after)
current_move_df$movement <- current_move
#update with positions after the move
current_move_df <- add_next_move(current_move, move_colour, current_move_df)
all_moves_df <- rbind(all_moves_df, current_move_df)
}
View(all_moves_df)
pgn2 <- "1.e4 d5 2.exd5 c6 3.dxc6 Bd7 4.cxb7 Be6 5.bxa8=Q Bf5 6.b4 a5 7.bxa5 Qb6 8.axb6 Kd7 9.b7 Nc6 10.b8=R h6 11.Qa7 h5 12. Qa3 h4"
#create the initial df
initial_board <- setup_board()
for(move_number in 1:16){
#pgn lists moves as 1. W B 2. W B ... so need to find 'round' first
pgn_round <- ceiling(move_number/2)
#then find which colour is taking the move
move_colours <- c("B", "W")
move_colour <- move_colours[(move_number %% 2) + 1]
current_move <- get_move(pgn, move_colour, pgn_round)
#subset the last move
current_move_df <- all_moves_df[which(all_moves_df$move == (move_number - 1)),]
#set the cols
current_move_df$move <- move_number
current_move_df$player <- as.character(move_colour)
current_move_df$piece_position_before <- as.character(current_move_df$piece_position_after)
current_move_df$piece_position_after <- as.character(current_move_df$piece_position_after)
current_move_df$movement <- current_move
#update with positions after the move
current_move_df <- add_next_move(current_move, move_colour, current_move_df)
all_moves_df <- rbind(all_moves_df, current_move_df)
}
rm(list=ls())
pgn2 <- "1.e4 d5 2.exd5 c6 3.dxc6 Bd7 4.cxb7 Be6 5.bxa8=Q Bf5 6.b4 a5 7.bxa5 Qb6 8.axb6 Kd7 9.b7 Nc6 10.b8=R h6 11.Qa7 h5 12. Qa3 h4"
#create the initial df
initial_board <- setup_board()
all_moves_df <- initial_board
#how many moves to process
if(is.null(move_cutoff)){
total_moves <- total_move_nos(pgn)
} else {
total_moves <- move_cutoff
}
move_cutoff = NULL
pgn <- pgn2
all_moves_df <- initial_board
#how many moves to process
if(is.null(move_cutoff)){
total_moves <- total_move_nos(pgn)
} else {
total_moves <- move_cutoff
}
for(move_number in 1:16){
#pgn lists moves as 1. W B 2. W B ... so need to find 'round' first
pgn_round <- ceiling(move_number/2)
#then find which colour is taking the move
move_colours <- c("B", "W")
move_colour <- move_colours[(move_number %% 2) + 1]
current_move <- get_move(pgn, move_colour, pgn_round)
#subset the last move
current_move_df <- all_moves_df[which(all_moves_df$move == (move_number - 1)),]
#set the cols
current_move_df$move <- move_number
current_move_df$player <- as.character(move_colour)
current_move_df$piece_position_before <- as.character(current_move_df$piece_position_after)
current_move_df$piece_position_after <- as.character(current_move_df$piece_position_after)
current_move_df$movement <- current_move
#update with positions after the move
current_move_df <- add_next_move(current_move, move_colour, current_move_df)
all_moves_df <- rbind(all_moves_df, current_move_df)
}
for(move_number in 17){
#pgn lists moves as 1. W B 2. W B ... so need to find 'round' first
pgn_round <- ceiling(move_number/2)
#then find which colour is taking the move
move_colours <- c("B", "W")
move_colour <- move_colours[(move_number %% 2) + 1]
current_move <- get_move(pgn, move_colour, pgn_round)
#subset the last move
current_move_df <- all_moves_df[which(all_moves_df$move == (move_number - 1)),]
#set the cols
current_move_df$move <- move_number
current_move_df$player <- as.character(move_colour)
current_move_df$piece_position_before <- as.character(current_move_df$piece_position_after)
current_move_df$piece_position_after <- as.character(current_move_df$piece_position_after)
current_move_df$movement <- current_move
#update with positions after the move
current_move_df <- add_next_move(current_move, move_colour, current_move_df)
all_moves_df <- rbind(all_moves_df, current_move_df)
}
for(move_number in 18){
#pgn lists moves as 1. W B 2. W B ... so need to find 'round' first
pgn_round <- ceiling(move_number/2)
#then find which colour is taking the move
move_colours <- c("B", "W")
move_colour <- move_colours[(move_number %% 2) + 1]
current_move <- get_move(pgn, move_colour, pgn_round)
#subset the last move
current_move_df <- all_moves_df[which(all_moves_df$move == (move_number - 1)),]
#set the cols
current_move_df$move <- move_number
current_move_df$player <- as.character(move_colour)
current_move_df$piece_position_before <- as.character(current_move_df$piece_position_after)
current_move_df$piece_position_after <- as.character(current_move_df$piece_position_after)
current_move_df$movement <- current_move
#update with positions after the move
current_move_df <- add_next_move(current_move, move_colour, current_move_df)
all_moves_df <- rbind(all_moves_df, current_move_df)
}
for(move_number in 19){
#pgn lists moves as 1. W B 2. W B ... so need to find 'round' first
pgn_round <- ceiling(move_number/2)
#then find which colour is taking the move
move_colours <- c("B", "W")
move_colour <- move_colours[(move_number %% 2) + 1]
current_move <- get_move(pgn, move_colour, pgn_round)
#subset the last move
current_move_df <- all_moves_df[which(all_moves_df$move == (move_number - 1)),]
#set the cols
current_move_df$move <- move_number
current_move_df$player <- as.character(move_colour)
current_move_df$piece_position_before <- as.character(current_move_df$piece_position_after)
current_move_df$piece_position_after <- as.character(current_move_df$piece_position_after)
current_move_df$movement <- current_move
#update with positions after the move
current_move_df <- add_next_move(current_move, move_colour, current_move_df)
all_moves_df <- rbind(all_moves_df, current_move_df)
}
for(move_number in 20){
#pgn lists moves as 1. W B 2. W B ... so need to find 'round' first
pgn_round <- ceiling(move_number/2)
#then find which colour is taking the move
move_colours <- c("B", "W")
move_colour <- move_colours[(move_number %% 2) + 1]
current_move <- get_move(pgn, move_colour, pgn_round)
#subset the last move
current_move_df <- all_moves_df[which(all_moves_df$move == (move_number - 1)),]
#set the cols
current_move_df$move <- move_number
current_move_df$player <- as.character(move_colour)
current_move_df$piece_position_before <- as.character(current_move_df$piece_position_after)
current_move_df$piece_position_after <- as.character(current_move_df$piece_position_after)
current_move_df$movement <- current_move
#update with positions after the move
current_move_df <- add_next_move(current_move, move_colour, current_move_df)
all_moves_df <- rbind(all_moves_df, current_move_df)
}
View(all_moves_df)
move_number <- 21
pgn_round <- ceiling(move_number/2)
#then find which colour is taking the move
move_colours <- c("B", "W")
move_colour <- move_colours[(move_number %% 2) + 1]
current_move <- get_move(pgn, move_colour, pgn_round)
#subset the last move
current_move_df <- all_moves_df[which(all_moves_df$move == (move_number - 1)),]
#set the cols
current_move_df$move <- move_number
current_move_df$player <- as.character(move_colour)
current_move_df$piece_position_before <- as.character(current_move_df$piece_position_after)
current_move_df$piece_position_after <- as.character(current_move_df$piece_position_after)
current_move_df$movement <- current_move
View(current_move_df)
current_move
move <- current_move
piece_mismatch <- which(current_move_df$piece != gsub("^[W|B]", "", gsub("\\..*", "", current_move_df$piece_id)))
if(length(piece_mismatch) > 0){
mismatch_df <- current_move_df[piece_mismatch,]
current_move_df <- current_move_df[-piece_mismatch,]
mismatch_df$piece_id <- paste0(mismatch_df$piece_colour, mismatch_df$piece)
current_move_df <- rbind(current_move_df, mismatch_df)
current_move_df$piece_id <- make.unique(as.character(current_move_df$piece_id))
}
current_move_df <- remove_taken_pieces(move, current_move_df)
final_position <- clean_move(move)
final_position
grepl("Q", move)
moving_piece_index <- find_queen_position(move, move_colour, current_move_df)
moving_piece_index
current_move_df$piece_position_after[moving_piece_index] <- final_position
View(current_move_df)
move
current_move
grepl("=", move)
current_move_df <- add_next_move(current_move, move_colour, current_move_df)
pgn_round <- ceiling(move_number/2)
#then find which colour is taking the move
move_colours <- c("B", "W")
move_colour <- move_colours[(move_number %% 2) + 1]
current_move <- get_move(pgn, move_colour, pgn_round)
#subset the last move
current_move_df <- all_moves_df[which(all_moves_df$move == (move_number - 1)),]
#set the cols
current_move_df$move <- move_number
current_move_df$player <- as.character(move_colour)
current_move_df$piece_position_before <- as.character(current_move_df$piece_position_after)
current_move_df$piece_position_after <- as.character(current_move_df$piece_position_after)
current_move_df$movement <- current_move
#update with positions after the move
current_move_df <- add_next_move(current_move, move_colour, current_move_df)
View(current_move_df)
all_moves_df <- rbind(all_moves_df, current_move_df)
View(all_moves_df)
frames = 200
all_moves_df <- cbind(all_moves_df, stringr::str_split_fixed(all_moves_df$piece_position_after, "", 2))
names(all_moves_df)[(ncol(all_moves_df)-1):ncol(all_moves_df)] <- c("piece_row", "piece_col")
all_moves_df$piece_row_numeric <- match(all_moves_df$piece_row, letters)
View(all_moves_df)
all_moves_df$piece_col <- as.numeric(as.character(all_moves_df$piece_col))
all_moves_df$ease <- "linear"
all_moves_df <- all_moves_df[which(names(all_moves_df) %in% c("move", "piece_id", "piece_row_numeric", "piece_col", "ease"))]
View(all_moves_df)
tween_moves_df <- tween_elements(all_moves_df, "move", "piece_id", "ease", nframes = frames)
View(tween_moves_df)
library(kaRpov)
pgn2 <- "1.e4 d5 2.exd5 c6 3.dxc6 Bd7 4.cxb7 Be6 5.bxa8=Q Bf5 6.b4 a5 7.bxa5 Qb6 8.axb6 Kd7 9.b7 Nc6 10.b8=R h6 11.Qa7 h5 12. Qa3 h4"
#create the initial df
initial_board <- setup_board()
#add in all the moves
all_moves_df <- add_all_moves(pgn2, initial_board, move_cutoff = NULL)
library(tweenr)
library(animation)
library(ggplot2)
library(grid)
library(png)
#create the gif
filename <- "C:/Users/WS-Guest/Desktop/chess_gif"
create_chess_gif(all_moves_df, speed = 20, pause_end = TRUE, frames = 50, filename)
pgn2 <- "1.e4 d5 2.exd5 c6 3.dxc6 Bd7 4.cxb7 Be6 5.bxa8=Q Bf5 6.b4 a5 7.bxa5 Qb6 8.axb6 Kd7 9.b7 Nc6 10.b8=R h6 11.Qa7 h5 12. Qa3 h4"
#create the initial df
initial_board <- setup_board()
#add in all the moves
all_moves_df <- add_all_moves(pgn2, initial_board, move_cutoff = NULL)
library(tweenr)
library(animation)
library(ggplot2)
library(grid)
library(png)
#create the gif
filename <- "C:/Users/WS-Guest/Desktop/chess_gif"
rm(list=ls())
pgn2 <- "1.e4 d5 2.exd5 c6 3.dxc6 Bd7 4.cxb7 Be6 5.bxa8=Q Bf5 6.b4 a5 7.bxa5 Qb6 8.axb6 Kd7 9.b7 Nc6 10.b8=R h6 11.Qa7 h5 12. Qa3 h4"
#create the initial df
initial_board <- setup_board()
#add in all the moves
all_moves_df <- add_all_moves(pgn2, initial_board, move_cutoff = NULL)
library(tweenr)
library(animation)
library(ggplot2)
library(grid)
library(png)
#create the gif
filename <- "C:/Users/WS-Guest/Desktop/chess_gif"
rm(list=ls())
pgn2 <- "1.e4 d5 2.exd5 c6 3.dxc6 Bd7 4.cxb7 Be6 5.bxa8=Q Bf5 6.b4 a5 7.bxa5 Qb6 8.axb6 Kd7 9.b7 Nc6 10.b8=R h6 11.Qa7 h6"
#create the initial df
initial_board <- setup_board()
#add in all the moves
all_moves_df <- add_all_moves(pgn2, initial_board, move_cutoff = NULL)
#create the gif
filename <- "C:/Users/WS-Guest/Desktop/chess_gif"
create_chess_gif(all_moves_df, speed = 20, pause_end = TRUE, frames = 50, filename)
library(kaRpov)
pgn2 <- "1.e4 d5 2.exd5 c6 3.dxc6 Bd7 4.cxb7 Be6 5.bxa8=Q Bf5 6.b4 a5 7.bxa5 Qb6 8.axb6 Kd7 9.b7 Nc6 10.b8=R h6 11.Qa7 Kd6 12.Qa3 Kd5 13.Rb7 kd4"
#create the initial df
initial_board <- setup_board()
#add in all the moves
all_moves_df <- add_all_moves(pgn2, initial_board, move_cutoff = NULL)
library(tweenr)
library(animation)
library(ggplot2)
library(grid)
library(png)
#create the gif
filename <- "C:/Users/WS-Guest/Desktop/chess_gif"
create_chess_gif(all_moves_df, speed = 20, pause_end = TRUE, frames = 50, filename)
move <- "bxa8=Q"
gsub(".*x", "", gsub("\\+|#|=", "", move))
gsub(".*x", "", gsub("\\+|#|=.", "", move))
library(kaRpov)
pgn2 <- "1.e4 d5 2.exd5 c6 3.dxc6 Bd7 4.cxb7 Be6 5.bxa8=Q Bf5 6.b4 a5 7.bxa5 Qb6 8.axb6 Kd7 9.b7 Nc6 10.b8=R h6 11.Qa7 Kd6 12.Qa3 Kd5 13.Rb7 kd4"
#create the initial df
initial_board <- setup_board()
#add in all the moves
all_moves_df <- add_all_moves(pgn2, initial_board, move_cutoff = NULL)
library(tweenr)
library(animation)
library(ggplot2)
library(grid)
library(png)
#create the gif
filename <- "C:/Users/WS-Guest/Desktop/chess_gif"
create_chess_gif(all_moves_df, speed = 20, pause_end = TRUE, frames = 50, filename)
frames = 50
frames = 200
tween_moves_df <- tween_moves(all_moves_df, frames = frames)
max(tween_moves_df$.frame)
max(tween_moves_df$move)
frame_per_move <- max(tween_moves_df$.frame)/max(tween_moves_df$move)
frame_per_move
frame_per_move <- round(max(tween_moves_df$.frame)/max(tween_moves_df$move))
frame_per_move
head(tween_moves_df)
grep("^B", tween_moves_df$.group)
black_tween_df <- tween_moves_df[grep("^B", tween_moves_df$.group),]
black_shift = 0.3
frame_per_move <- max(tween_moves_df$.frame)/max(tween_moves_df$move)
shifted_frames <- round(frame_per_move * black_shift)
shifted_frames
black_shift = 0.5
frame_per_move <- max(tween_moves_df$.frame)/max(tween_moves_df$move)
shifted_frames <- round(frame_per_move * black_shift)
shifted_frames
black_tween_df <- black_tween_df[-c(1:shifted_frames),]
hold_black_df <- black_tween_df[c((max(black_tween_df$.frame)-shifted_frames):max(black_tween_df$.frame)),]
View(hold_black_df)
(max(black_tween_df$.frame)-shifted_frames)
max(black_tween_df$.frame
)
c((max(black_tween_df$.frame)-shifted_frames + 1):max(black_tween_df$.frame))
hold_black_df <- black_tween_df[which(black_tween_df$.frame %in% c((max(black_tween_df$.frame)-shifted_frames + 1):max(black_tween_df$.frame))),]
View(hold_black_df)
frame_per_move <- max(tween_moves_df$.frame)/max(tween_moves_df$move)
shifted_frames <- round(frame_per_move * black_shift)
black_tween_df <- tween_moves_df[grep("^B", tween_moves_df$.group),]
#remove the first n frames
black_tween_df <- black_tween_df[-c(1:shifted_frames),]
#hold onto the last n frames
hold_black_df <- black_tween_df[which(black_tween_df$.frame %in% c((max(black_tween_df$.frame)-shifted_frames + 1):max(black_tween_df$.frame))),]
#subtract the frame shift from the black_tween_df
black_tween_df$.frame <- black_tween_df$.frame - shifted_frames
tween_moves_df <- rbind(tween_moves_df, black_tween_df, hold_black_df)
tween_moves_df <- tween_moves(all_moves_df, frames = frames)
black_tween_df <- tween_moves_df[grep("^B", tween_moves_df$.group),]
tween_moves_df <- tween_moves_df[-grep("^B", tween_moves_df$.group),]
3202 + 2370
black_tween_df <- black_tween_df[-c(1:shifted_frames),]
#hold onto the last n frames
hold_black_df <- black_tween_df[which(black_tween_df$.frame %in% c((max(black_tween_df$.frame)-shifted_frames + 1):max(black_tween_df$.frame))),]
#subtract the frame shift from the black_tween_df
black_tween_df$.frame <- black_tween_df$.frame - shifted_frames
tween_moves_df <- rbind(tween_moves_df, black_tween_df, hold_black_df)
tween_moves_df <- tween_moves(all_moves_df, frames = frames)
frame_per_move <- max(tween_moves_df$.frame)/max(tween_moves_df$move)
shifted_frames <- round(frame_per_move * black_shift)
black_tween_df <- tween_moves_df[grep("^B", tween_moves_df$.group),]
tween_moves_df <- tween_moves_df[-grep("^B", tween_moves_df$.group),]
#remove the first n frames
black_tween_df <- black_tween_df[-c(1:shifted_frames),]
tween_moves_df <- tween_moves(all_moves_df, frames = frames)
frame_per_move <- max(tween_moves_df$.frame)/max(tween_moves_df$move)
shifted_frames <- round(frame_per_move * black_shift)
black_tween_df <- tween_moves_df[grep("^B", tween_moves_df$.group),]
tween_moves_df <- tween_moves_df[-grep("^B", tween_moves_df$.group),]
#remove the first n frames
black_tween_df <- black_tween_df[-which(black_tween_df$.frame %in% 1:shifted_frames),]
#hold onto the last n frames
hold_black_df <- black_tween_df[which(black_tween_df$.frame %in% c((max(black_tween_df$.frame)-shifted_frames + 1):max(black_tween_df$.frame))),]
#subtract the frame shift from the black_tween_df
black_tween_df$.frame <- black_tween_df$.frame - shifted_frames
tween_moves_df <- rbind(tween_moves_df, black_tween_df, hold_black_df)
tween_moves_df <- tween_moves(all_moves_df, frames = frames)
frame_per_move <- max(tween_moves_df$.frame)/max(tween_moves_df$move)
shifted_frames <- round(frame_per_move * black_shift)
black_tween_df <- tween_moves_df[grep("^B", tween_moves_df$.group),]
tween_moves_df <- tween_moves_df[-grep("^B", tween_moves_df$.group),]
black_tween_df <- black_tween_df[-which(black_tween_df$.frame %in% 1:shifted_frames),]
hold_black_df <- black_tween_df[which(black_tween_df$.frame %in% c((max(black_tween_df$.frame)-shifted_frames + 1):max(black_tween_df$.frame))),]
black_tween_df$.frame <- black_tween_df$.frame - shifted_frames
View(black_tween_df)
frame_per_move <- max(tween_moves_df$.frame)/max(tween_moves_df$move)
shifted_frames <- round(frame_per_move * black_shift)
black_tween_df <- tween_moves_df[grep("^B", tween_moves_df$.group),]
tween_moves_df <- tween_moves_df[-grep("^B", tween_moves_df$.group),]
#remove the first n frames
black_tween_df <- black_tween_df[-which(black_tween_df$.frame %in% 1:shifted_frames),]
#hold onto the last n frames
hold_black_df <- black_tween_df[which(black_tween_df$.frame %in% c((max(black_tween_df$.frame)-shifted_frames + 1):max(black_tween_df$.frame))),]
#subtract the frame shift from the black_tween_df
black_tween_df$.frame <- black_tween_df$.frame - shifted_frames
tween_moves_df <- rbind(tween_moves_df, black_tween_df, hold_black_df)
frame_per_move <- max(tween_moves_df$.frame)/max(tween_moves_df$move)
shifted_frames <- round(frame_per_move * black_shift)
black_tween_df <- tween_moves_df[grep("^B", tween_moves_df$.group),]
tween_moves_df <- tween_moves_df[-grep("^B", tween_moves_df$.group),]
#remove the first n frames
black_tween_df <- black_tween_df[-which(black_tween_df$.frame %in% 1:shifted_frames),]
tween_moves_df <- tween_moves(all_moves_df, frames = frames)
frame_per_move <- max(tween_moves_df$.frame)/max(tween_moves_df$move)
shifted_frames <- round(frame_per_move * black_shift)
black_tween_df <- tween_moves_df[grep("^B", tween_moves_df$.group),]
tween_moves_df <- tween_moves_df[-grep("^B", tween_moves_df$.group),]
black_tween_df <- black_tween_df[-which(black_tween_df$.frame %in% 1:shifted_frames),]
hold_black_df <- black_tween_df[which(black_tween_df$.frame %in% c((max(black_tween_df$.frame)-shifted_frames + 1):max(black_tween_df$.frame))),]
tween_moves_df <- tween_moves(all_moves_df, frames = frames)
frame_per_move <- max(tween_moves_df$.frame)/max(tween_moves_df$move)
shifted_frames <- round(frame_per_move * black_shift)
black_tween_df <- tween_moves_df[grep("^B", tween_moves_df$.group),]
tween_moves_df <- tween_moves_df[-grep("^B", tween_moves_df$.group),]
black_tween_df <- black_tween_df[-which(black_tween_df$.frame %in% 0:(shifted_frames-1)),]
View(black_tween_df)
hold_black_df <- black_tween_df[which(black_tween_df$.frame %in% c((max(black_tween_df$.frame)-shifted_frames + 1):max(black_tween_df$.frame))),]
black_tween_df$.frame <- black_tween_df$.frame - shifted_frames
View(black_tween_df)
View(hold_black_df)
tween_moves_df <- rbind(tween_moves_df, black_tween_df, hold_black_df)
View(tween_moves_df)
library(kaRpov)
pgn2 <- "1.e4 d5 2.exd5 c6 3.dxc6 Bd7 4.cxb7 Be6 5.bxa8=Q Bf5 6.b4 a5 7.bxa5 Qb6 8.axb6 Kd7 9.b7 Nc6 10.b8=R h6 11.Qa7 Kd6 12.Qa3 Kd5 13.Rb7 kd4"
#create the initial df
initial_board <- setup_board()
#add in all the moves
all_moves_df <- add_all_moves(pgn2, initial_board, move_cutoff = NULL)
library(tweenr)
library(animation)
library(ggplot2)
library(grid)
library(png)
#create the gif
filename <- "C:/Users/WS-Guest/Desktop/chess_gif"
create_chess_gif(all_moves_df, speed = 20, pause_end = TRUE, frames = 50, black_shift = 0.5, filename)
create_chess_gif(all_moves_df, speed = 15, pause_end = TRUE, frames = 200, black_shift = 0.5, filename)
library(kaRpov)
#the pgn for the [immortal game]()
immortal_pgn <- "1.e4 e5 2.f4 exf4 3.Bc4 Qh4+ 4.Kf1 b5 5.Bxb5 Nf6 6.Nf3 Qh6 7.d3 Nh5 8.Nh4 Qg5 9.Nf5 c6 10.g4 Nf6 11.Rg1 cxb5 12.h4 Qg6 13.h5 Qg5 14.Qf3 Ng8 15.Bxf4 Qf6 16.Nc3 Bc5 17.Nd5 Qxb2 18.Bd6 Bxg1 19.e5 Qxa1+ 20.Ke2 Na6 21.Nxg7+ Kd8 22.Qf6+ Nxf6 23.Be7#"
filename <- "C:/Users/WS-Guest/Desktop/chess_gif"
library(tweenr)
library(animation)
library(ggplot2)
library(grid)
library(png)
#create the gif
plot_pgn <- function(pgn,
light_col = "#f5f5dc", dark_col = "#00688b", square_labels = FALSE, plot = FALSE,
move_cutoff = NULL, frames = 100,
speed = 20, pause_end = TRUE, black_shift = NULL,
name = "chess_plot.gif")
))()
rm(list=ls())
immortal_pgn <- "1.e4 e5 2.f4 exf4 3.Bc4 Qh4+ 4.Kf1 b5 5.Bxb5 Nf6 6.Nf3 Qh6 7.d3 Nh5 8.Nh4 Qg5 9.Nf5 c6 10.g4 Nf6 11.Rg1 cxb5 12.h4 Qg6 13.h5 Qg5 14.Qf3 Ng8 15.Bxf4 Qf6 16.Nc3 Bc5 17.Nd5 Qxb2 18.Bd6 Bxg1 19.e5 Qxa1+ 20.Ke2 Na6 21.Nxg7+ Kd8 22.Qf6+ Nxf6 23.Be7#"
filename <- "C:/Users/WS-Guest/Desktop/chess_gif"
library(tweenr)
library(animation)
library(ggplot2)
library(grid)
library(png)
#create the gif
plot_pgn (pgn,
light_col = "#f5f5dc", dark_col = "#00688b", square_labels = FALSE, plot = FALSE,
move_cutoff = NULL, frames = 100,
speed = 20, pause_end = TRUE, black_shift = NULL,
name = filename)
immortal_pgn <- "1.e4 e5 2.f4 exf4 3.Bc4 Qh4+ 4.Kf1 b5 5.Bxb5 Nf6 6.Nf3 Qh6 7.d3 Nh5 8.Nh4 Qg5 9.Nf5 c6 10.g4 Nf6 11.Rg1 cxb5 12.h4 Qg6 13.h5 Qg5 14.Qf3 Ng8 15.Bxf4 Qf6 16.Nc3 Bc5 17.Nd5 Qxb2 18.Bd6 Bxg1 19.e5 Qxa1+ 20.Ke2 Na6 21.Nxg7+ Kd8 22.Qf6+ Nxf6 23.Be7#"
filename <- "C:/Users/WS-Guest/Desktop/chess_gif"
library(tweenr)
library(animation)
library(ggplot2)
library(grid)
library(png)
#create the gif
plot_pgn (immortal_pgn,
light_col = "#f5f5dc", dark_col = "#00688b", square_labels = FALSE, plot = FALSE,
move_cutoff = NULL, frames = 100,
speed = 20, pause_end = TRUE, black_shift = NULL,
name = filename)
rm(list=ls())
library(kaRpov)
#the pgn for the [immortal game]()
immortal_pgn <- "1.e4 e5 2.f4 exf4 3.Bc4 Qh4+ 4.Kf1 b5 5.Bxb5 Nf6 6.Nf3 Qh6 7.d3 Nh5 8.Nh4 Qg5 9.Nf5 c6 10.g4 Nf6 11.Rg1 cxb5 12.h4 Qg6 13.h5 Qg5 14.Qf3 Ng8 15.Bxf4 Qf6 16.Nc3 Bc5 17.Nd5 Qxb2 18.Bd6 Bxg1 19.e5 Qxa1+ 20.Ke2 Na6 21.Nxg7+ Kd8 22.Qf6+ Nxf6 23.Be7#"
filename <- "C:/Users/WS-Guest/Desktop/chess_gif"
library(tweenr)
library(animation)
library(ggplot2)
library(grid)
library(png)
#create the gif
plot_pgn (immortal_pgn,
light_col = "#f5f5dc", dark_col = "#00688b", square_labels = FALSE, plot = FALSE,
move_cutoff = NULL, frames = 100,
speed = 20, pause_end = TRUE, black_shift = NULL,
name = filename)
